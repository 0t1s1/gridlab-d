project(powerflow)

include_directories(../${GLDCORE_LOC})
include_directories(../third_party/SuperLU_MT)
#include_directories(../third_party/jsonCpp)
SET( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -I../third_party/SuperLU_MT") # -I../third_party/jsonCpp" )

add_library(${PROJECT_NAME}
        powerflow/billdump.cpp
        powerflow/billdump.h
        powerflow/capacitor.cpp
        powerflow/capacitor.h
        powerflow/currdump.cpp
        powerflow/currdump.h
        powerflow/emissions.cpp
        powerflow/emissions.h
        powerflow/fault_check.cpp
        powerflow/fault_check.h
        powerflow/fuse.cpp
        powerflow/fuse.h
        powerflow/impedance_dump.cpp
        powerflow/impedance_dump.h
        powerflow/jsondump.cpp
        powerflow/jsondump.h
        powerflow/init.cpp
        powerflow/line_configuration.cpp
        powerflow/line_configuration.h
        powerflow/line.cpp
        powerflow/line.h
        powerflow/line_spacing.cpp
        powerflow/line_spacing.h
        powerflow/link.cpp
        powerflow/link.h
        powerflow/load.cpp
        powerflow/load.h
        powerflow/load_tracker.cpp
        powerflow/load_tracker.h
        powerflow/main.cpp
        powerflow/meter.cpp
        powerflow/meter.h
        powerflow/meter_test.h
        powerflow/motor.cpp
        powerflow/motor.h
        powerflow/node.cpp
        powerflow/node.h
        powerflow/overhead_line_conductor.cpp
        powerflow/overhead_line_conductor.h
        powerflow/overhead_line.cpp
        powerflow/overhead_line.h
        powerflow/overheadline_test.h
        powerflow/powerflow.cpp
        powerflow/powerflow.h
        powerflow/powerflow_library.cpp
        powerflow/powerflow_library.h
        powerflow/powerflow_object.cpp
        powerflow/powerflow_object.h
        powerflow/power_metrics.cpp
        powerflow/power_metrics.h
        powerflow/pqload.cpp
        powerflow/pqload.h
        powerflow/recloser.cpp
        powerflow/recloser.h
        powerflow/regulator_configuration.cpp
        powerflow/regulator_configuration.h
        powerflow/regulator.cpp
        powerflow/regulator.h
        powerflow/regulator_test.h
        powerflow/restoration.cpp
        powerflow/restoration.h
        powerflow/sectionalizer.cpp
        powerflow/sectionalizer.h
        powerflow/series_reactor.cpp
        powerflow/series_reactor.h
        powerflow/solver_nr.cpp
        powerflow/solver_nr.h
        powerflow/substation.cpp
        powerflow/substation.h
        powerflow/switch_object.cpp
        powerflow/switch_object.h
        powerflow/test.cpp
        powerflow/test.h
        powerflow/transformer_configuration.cpp
        powerflow/transformer_configuration.h
        powerflow/transformer.cpp
        powerflow/transformer.h
        powerflow/transformer_test.h
        powerflow/triplex_line_conductor.cpp
        powerflow/triplex_line_conductor.h
        powerflow/triplex_line_configuration.cpp
        powerflow/triplex_line_configuration.h
        powerflow/triplex_line.cpp
        powerflow/triplex_line.h
        powerflow/triplexline_test.h
        powerflow/triplex_load.h
        powerflow/triplex_load.cpp
        powerflow/triplex_meter.cpp
        powerflow/triplex_meter.h
        powerflow/triplex_node.cpp
        powerflow/triplex_node.h
        powerflow/underground_line_conductor.cpp
        powerflow/underground_line_conductor.h
        powerflow/underground_line.cpp
        powerflow/underground_line.h
        powerflow/undergroundline_test.h
        powerflow/vfd.cpp
        powerflow/vfd.h
        powerflow/voltdump.cpp
        powerflow/voltdump.h
        powerflow/volt_var_control.cpp
        powerflow/volt_var_control.h
        )

set_target_properties(${PROJECT_NAME}
        PROPERTIES PREFIX ""
        )

target_link_libraries(${PROJECT_NAME} jsoncpp_lib libsuperlu)

target_link_libraries(${PROJECT_NAME} ${OS_SPECIFIC_LIBRARIES})
